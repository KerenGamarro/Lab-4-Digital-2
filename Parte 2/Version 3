// Keren Gamarro - Universidad del Valle de Guatemala
// Control combinado de 3 LEDs RGB (PWM) y servomotor con botones (PWM sin librería)

#include <Arduino.h>

// El led RGB se reemplazo por 3 leds comunes
#define LED_ROJO 15
#define LED_VERDE 4
#define LED_AZUL 18

#define BOTON_B3 33  // Selección de color
#define BOTON_B4 32  // Cambio de brillo

int colorSeleccionado = 0;  // 0 = Rojo, 1 = Verde, 2 = Azul
int nivelesBrillo[3] = {0, 0, 0};  // Nivel 0-3 por color
const int nivelesPWM[4] = {0, 85, 170, 255};
const int porcentajeBrillo[4] = {0, 33, 66, 100};

unsigned long tiempoUltimoB3 = 0;
unsigned long tiempoUltimoB4 = 0;
const unsigned long debounceDelay = 200;

// Se conecta el pin del servo y los botones que lo controlan 
#define SERVO_PIN 27
#define BOTON_IZQUIERDA 26
#define BOTON_DERECHA 25

#define SERVO_CANAL 3
#define SERVO_FRECUENCIA 50  // 50 Hz a diferencia de los leds esta es la frecuencia que se debe de poner
#define SERVO_RESOLUCION 10  // 10 bits (0-1023) // para un movimiento claro se usaron 10 bits

const int posiciones[5] = {26, 51, 77, 102, 128}; // Duty 0.5ms–2.5ms como se ve en la imagen
int posicionActual = 2; // Comienza en el centro (90°)

unsigned long ultimaLecturaIzquierda = 0;
unsigned long ultimaLecturaDerecha = 0;

// ==========================================================

void imprimirEstadoLED() {
  const char* colores[3] = {"Rojo", "Verde", "Azul"};
  Serial.print("Color seleccionado: ");
  Serial.print(colores[colorSeleccionado]);
  Serial.print(" | Brillo: ");
  Serial.print(porcentajeBrillo[nivelesBrillo[colorSeleccionado]]);
  Serial.println("%");
}

void setup() {
  Serial.begin(115200);

  // PWM para LEDs
  ledcAttachPin(LED_ROJO, 0);
  ledcAttachPin(LED_VERDE, 1);
  ledcAttachPin(LED_AZUL, 2);
  ledcSetup(0, 5000, 8);
  ledcSetup(1, 5000, 8);
  ledcSetup(2, 5000, 8);

  // PWM para Servo
  ledcSetup(SERVO_CANAL, SERVO_FRECUENCIA, SERVO_RESOLUCION);
  ledcAttachPin(SERVO_PIN, SERVO_CANAL);
  ledcWrite(SERVO_CANAL, posiciones[posicionActual]);

  // Botones LED
  pinMode(BOTON_B3, INPUT_PULLUP);
  pinMode(BOTON_B4, INPUT_PULLUP);

  // Botones Servo
  pinMode(BOTON_IZQUIERDA, INPUT_PULLUP);
  pinMode(BOTON_DERECHA, INPUT_PULLUP);

  imprimirEstadoLED();
  Serial.println("Control de servo listo");
}

void loop() {
  unsigned long ahora = millis();

  // --------------------- LEDs ----------------------
  if (digitalRead(BOTON_B3) == LOW && ahora - tiempoUltimoB3 > debounceDelay) {
    colorSeleccionado = (colorSeleccionado + 1) % 3;
    imprimirEstadoLED();
    tiempoUltimoB3 = ahora;
  }

  if (digitalRead(BOTON_B4) == LOW && ahora - tiempoUltimoB4 > debounceDelay) {
    nivelesBrillo[colorSeleccionado] = (nivelesBrillo[colorSeleccionado] + 1) % 4;
    imprimirEstadoLED();
    tiempoUltimoB4 = ahora;
  }

  // Aplicar PWM a LEDs
  ledcWrite(0, nivelesPWM[nivelesBrillo[0]]);  // Rojo
  ledcWrite(1, nivelesPWM[nivelesBrillo[1]]);  // Verde
  ledcWrite(2, nivelesPWM[nivelesBrillo[2]]);  // Azul

  // -------------------- Servo ----------------------
  if (digitalRead(BOTON_IZQUIERDA) == LOW && ahora - ultimaLecturaIzquierda > debounceDelay) {
    if (posicionActual > 0) {
      posicionActual--;
      Serial.print("Servo Izquierda → Posición: ");
      Serial.println(posicionActual);
      ledcWrite(SERVO_CANAL, posiciones[posicionActual]);
    }
    ultimaLecturaIzquierda = ahora;
  }

  if (digitalRead(BOTON_DERECHA) == LOW && ahora - ultimaLecturaDerecha > debounceDelay) {
    if (posicionActual < 4) {
      posicionActual++;
      Serial.print("Servo Derecha → Posición: ");
      Serial.println(posicionActual);
      ledcWrite(SERVO_CANAL, posiciones[posicionActual]);
    }
    ultimaLecturaDerecha = ahora;
  }

  delay(10); // Pequeño delay para evitar rebotes y uso excesivo de CPU
}
